@model IEnumerable<Book>
@{
    ViewData["Title"] = "CRUD";
}
<style>
   
    .logo {
        width: 50px; 
        height: 50px;
        border-radius: 50%; 
        border: 2px solid #fff; 
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); 
        transition: transform 0.3s ease-in-out; 
        cursor: pointer;
    }
        .logo:hover {
            transform: scale(1.1); 
        }

    .expanded-logo {
        width: 200px;
        height: 200px;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
        position:absolute; 
        z-index: 999;
        display: none;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    input[type="text"],
    input[type="number"] {
        width: 100%;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-bottom: 10px;
    }


    form {
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
    }

    .filter-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        align-items: center;
    }

        .filter-container > div {
            width: 22%;
            min-width: 175px;
        }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
        color: #fff;
    }

    form {
        border-radius: 7px;
        padding: 10px;
        margin-bottom: 20px;
        box-shadow: 0px 0px 6px #ddd;
    }

    body {
        background: #f4fff4;
        color: #333;
    }

        /* Added styles for content within the expanded logo */
        .expanded-logo img {
            width: 100%; /* Ensures image fills the expanded logo */
        }

    #Cost:focus::placeholder {
        color: transparent;
    }

    .records-form {
        display: flex;
        align-items: center;
    }


    .pagination-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 20px;
    }

    .records-form {
        display: flex;
        align-items: center;
        margin-bottom: 0; /* Remove the bottom margin */
    }

        .records-form input[type="text"] {
            margin-right: 10px; /* Add some spacing between the input and the button */
        }

 
</style>
<h1>CRUD</h1>
<form action="@Url.Action("CRUD","Books")" method="post" id="filter">
    <legend>Filters</legend>
    <div class="filter-container">
        <div>
            <label for="Name">Name of the book </label>
            <input type="text" name="Name" id="Name" style="color:black" />
        </div>
        <div>
            <label for="MaxCost">Max cost </label>
            <input type="text" id="MaxCost" placeholder="Max" name="MaxCost" />
        </div>
        <div>
            <label for="MinCost">min cost</label>
            <input type="text" id="MinCost" placeholder="Min" name="MinCost" />
        </div>
        <div>
            <label>
                kind
            </label>
            <select class="form-select" name="Kind" aria-label="Kind">
                @{
                    List<dynamic> arr = new();
                }

                @foreach (var item in (List<Book>)TempData["books"])
                {
                    if (!arr.Contains(item.Kind))
                    {
                        arr.Add(item.Kind);
                        <option>@item.Kind</option>

                    }
                }
                <option selected>All</option>

            </select>
        </div>
    </div>


    <br />
    <input value="Search" name="Search" style="width:100%" type="submit" class="btn btn-outline-primary" />
</form>




<a class="btn btn-outline-primary" href="@Url.Action("AddNewBook","Books")">Add New Book</a>
    <table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Logo</th>
            <th>Name</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
    <tr>
        <td>
            <img src="@item.PictureUrl" class="logo" onclick="expandLogo(event,this)" />
            <div class="expanded-logo" style="display: none;">
                        <img src="@item.PictureUrl" alt="Expanded Logo" />
                </div>

        </td>
        <td>@item.Name</td>
        <td>@item.Description</td>
        <td>
            <div class="btn-group" role="group">

                <a href="@Url.Action("View","Books",new { id = @item.Id })" class="btn btn-success">View</a>
                <a href="@Url.Action("EditBook","Books",new { id = @item.Id })" class="btn btn-primary">Edit</a>
                        <a href="@Url.Action("DeleteBook","Books",new { id = @item.Id })" class="btn btn-danger">Delete</a>

            </div>
        </td>
    </tr>
@*             string Kind,int MaxCost = 1000000,int MinCost = 0,string Name = null
 *@ 
}
</tbody>
    <tr>
        <td colspan="4">
            <br />
            @{
                var previousPage = ViewBag.PageNo - 1;
                if (previousPage < 0)
                {
                    previousPage = 1;
                }
                var nextPage = ViewBag.PageNo + 1;
                if (nextPage > ViewBag.NoOfPages)
                {
                    nextPage = ViewBag.NoOfPages;
                }
            }
            @* ViewBag.Kind = Kind;
            ViewBag.MaxCost = MaxCost;
            ViewBag.MinCost = MinCost;
            ViewBag.Name = Name; *@
            <div class="pagination-container">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item"><a class="page-link" href="@Url.Action("CRUD","Books",new {PageNo=@previousPage,Kind=ViewBag.Kind,MaxCost=ViewBag.MaxCost,MinCost=ViewBag.MinCost,Name=ViewBag.Name,NoOfRecordsPerPage=ViewBag.NoOfRecordsPerPage})">Previous</a></li>
@*                     <li class="page-item"><a class="page-link" href="@Url.Action("CRUD","Books",new {PageNo=1})">1</a></li>
 *@                    @for (int i = 1; i <= ViewBag.NoOfPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.PageNo ? "active" : "")">
                            <a class="page-link" href="@Url.Action("CRUD","Books",new {PageNo=@i,Kind=ViewBag.Kind,MaxCost=ViewBag.MaxCost,MinCost=ViewBag.MinCost,Name=ViewBag.Name,NoOfRecordsPerPage=ViewBag.NoOfRecordsPerPage})">@i</a>
                            </li>
                        
                    }
                    <li class="page-item"><a class="page-link" href="@Url.Action("CRUD","Books",new {PageNo=@nextPage,Kind=ViewBag.Kind,MaxCost=ViewBag.MaxCost,MinCost=ViewBag.MinCost,Name=ViewBag.Name,NoOfRecordsPerPage=ViewBag.NoOfRecordsPerPage})">Next</a></li>
                </ul>
            </nav>
            <form class="records-form">
                <input name="NoOfRecordsPerPage" type="text" id="NoOfRecordsPerPage" value="@ViewBag.NoOfRecordsPerPage" />
                <input type="submit" value="submit" class="btn btn-outline-success" />
            </form>
            </div>
        </td>

        

    </tr>

    <script>
        function expandLogo(event, element) {
            event.stopPropagation();
            var expandedLogo = element.parentElement.querySelector('.expanded-logo');
            var td = element.parentNode;
            expandedLogo.style.display = "block";
            expandedLogo.style.left = td.offsetLeft + "px";
            expandedLogo.style.top = td.offsetTop + "px";
            document.addEventListener("click", function hideLogo() {
                expandedLogo.style.display = "none";
                document.removeEventListener("click", hideLogo);
            });
        }

    </script>

